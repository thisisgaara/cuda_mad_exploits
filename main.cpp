//=============================================================================
#include "header.h"
//=============================================================================
int NUM_IMAGES = 1;
int image_index = 0; //This variable indexes into the image_array
image *image_array; //Array of images
double timing_sum_global = 0;
double timing_sum_combine_mad = 0;


int do_main()
{

	// Read in images
	cv::Mat mat_ref = cv::imread("horse.bmp", CV_8UC1); // CV_LOAD_IMAGE_UNCHANGED);
	//cv::Mat mat_ref = cv::imread(reference_image_name[i], CV_8UC1); // CV_LOAD_IMAGE_UNCHANGED);
	cv::Mat mat_dst = cv::imread("horse.JP2.bmp", CV_8UC1); // CV_LOAD_IMAGE_UNCHANGED);
	//cv::Mat mat_dst = cv::imread(distorted_image_name[j], CV_8UC1); // CV_LOAD_IMAGE_UNCHANGED);

	// Call function in .cu file
	//cudaError_t cudaStatus = kernel_wrapper(mat_ref, mat_dst);
	kernel_wrapper(mat_ref, mat_dst);

	return 0;
}
//=============================================================================
int main(int argc, char* argv[])
{
	int failure_code = 0;
	try
	{
		failure_code = do_main();
	}
	catch (std::exception const& err)
	{
		std::printf("%s\n", err.what());
		failure_code = 1;
		getchar();
	}

	system("pause"); // Remove this for profiling
	//return failure_code;
	return 0;
}
